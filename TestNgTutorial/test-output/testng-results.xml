<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="13" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-04-04T10:47:23 IST" name="Loan Department" finished-at="2024-04-04T10:47:23 IST" duration-ms="203">
    <groups>
      <group name="smoke">
        <method signature="day2.ploan()[pri:0, instance:test.day2@f736069]" name="ploan" class="test.day2"/>
        <method signature="day4.MobileloginHomeLoan()[pri:0, instance:test.day4@6da21078]" name="MobileloginHomeLoan" class="test.day4"/>
        <method signature="day3.MobileloginCarLoan()[pri:0, instance:test.day3@55634720]" name="MobileloginCarLoan" class="test.day3"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2024-04-04T10:47:23 IST" name="Car Loan" finished-at="2024-04-04T10:47:23 IST" duration-ms="203">
      <class name="test.day3">
        <test-method is-config="true" signature="Bfsuite()[pri:0, instance:test.day3@55634720]" started-at="2024-04-04T10:47:22 IST" name="Bfsuite" finished-at="2024-04-04T10:47:23 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bfsuite -->
        <test-method is-config="true" signature="Beforeclas()[pri:0, instance:test.day3@55634720]" started-at="2024-04-04T10:47:23 IST" name="Beforeclas" finished-at="2024-04-04T10:47:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforeclas -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@55634720]" started-at="2024-04-04T10:47:23 IST" name="beforeevery" finished-at="2024-04-04T10:47:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobileloginCarLoan()[pri:0, instance:test.day3@55634720]" started-at="2024-04-04T10:47:23 IST" name="MobileloginCarLoan" finished-at="2024-04-04T10:47:23 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileloginCarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@55634720]" started-at="2024-04-04T10:47:23 IST" name="afterevery" finished-at="2024-04-04T10:47:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@55634720]" started-at="2024-04-04T10:47:23 IST" name="beforeevery" finished-at="2024-04-04T10:47:23 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobilesignoutcarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@55634720]" started-at="2024-04-04T10:47:23 IST" name="MobilesignoutcarLoan" data-provider="getData" finished-at="2024-04-04T10:47:23 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutcarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@55634720]" started-at="2024-04-04T10:47:23 IST" name="afterevery" finished-at="2024-04-04T10:47:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@55634720]" started-at="2024-04-04T10:47:23 IST" name="beforeevery" finished-at="2024-04-04T10:47:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobilesignoutcarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@55634720]" started-at="2024-04-04T10:47:23 IST" name="MobilesignoutcarLoan" data-provider="getData" finished-at="2024-04-04T10:47:23 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutcarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@55634720]" started-at="2024-04-04T10:47:23 IST" name="afterevery" finished-at="2024-04-04T10:47:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@55634720]" started-at="2024-04-04T10:47:23 IST" name="beforeevery" finished-at="2024-04-04T10:47:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobilesignoutcarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@55634720]" started-at="2024-04-04T10:47:23 IST" name="MobilesignoutcarLoan" data-provider="getData" finished-at="2024-04-04T10:47:23 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutcarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@55634720]" started-at="2024-04-04T10:47:23 IST" name="afterevery" finished-at="2024-04-04T10:47:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@55634720]" started-at="2024-04-04T10:47:23 IST" name="beforeevery" finished-at="2024-04-04T10:47:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="WebloginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@55634720]" started-at="2024-04-04T10:47:23 IST" name="WebloginCarLoan" finished-at="2024-04-04T10:47:23 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginCarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@55634720]" started-at="2024-04-04T10:47:23 IST" name="afterevery" finished-at="2024-04-04T10:47:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="Afterclas()[pri:0, instance:test.day3@55634720]" started-at="2024-04-04T10:47:23 IST" name="Afterclas" finished-at="2024-04-04T10:47:23 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afterclas -->
      </class> <!-- test.day3 -->
      <class name="test.day1">
        <test-method is-config="true" signature="Afsuite()[pri:0, instance:test.day1@53fdffa1]" started-at="2024-04-04T10:47:23 IST" name="Afsuite" finished-at="2024-04-04T10:47:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afsuite -->
      </class> <!-- test.day1 -->
    </test> <!-- Car Loan -->
    <test started-at="2024-04-04T10:47:23 IST" name="Personal Loan" finished-at="2024-04-04T10:47:23 IST" duration-ms="186">
      <class name="test.day4">
        <test-method signature="LoginAPIHomeLoan()[pri:0, instance:test.day4@6da21078]" started-at="2024-04-04T10:47:23 IST" name="LoginAPIHomeLoan" finished-at="2024-04-04T10:47:23 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIHomeLoan -->
        <test-method signature="MobileloginHomeLoan()[pri:0, instance:test.day4@6da21078]" started-at="2024-04-04T10:47:23 IST" name="MobileloginHomeLoan" finished-at="2024-04-04T10:47:23 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileloginHomeLoan -->
        <test-method signature="WebloginHomeLoan(java.lang.String)[pri:0, instance:test.day4@6da21078]" started-at="2024-04-04T10:47:23 IST" name="WebloginHomeLoan" finished-at="2024-04-04T10:47:23 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginHomeLoan -->
      </class> <!-- test.day4 -->
      <class name="test.day2">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:test.day2@f736069]" started-at="2024-04-04T10:47:23 IST" name="prerequisite" finished-at="2024-04-04T10:47:23 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method signature="ploan()[pri:0, instance:test.day2@f736069]" started-at="2024-04-04T10:47:23 IST" name="ploan" finished-at="2024-04-04T10:47:23 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- test.day2 -->
      <class name="test.day1">
        <test-method signature="Demo()[pri:0, instance:test.day1@53fdffa1]" started-at="2024-04-04T10:47:23 IST" name="Demo" finished-at="2024-04-04T10:47:23 IST" duration-ms="28" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.day1.Demo(day1.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:test.day1@53fdffa1]" started-at="2024-04-04T10:47:23 IST" name="prerequisite" finished-at="2024-04-04T10:47:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
      </class> <!-- test.day1 -->
    </test> <!-- Personal Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
